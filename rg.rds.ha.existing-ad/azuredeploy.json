{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
  "parameters": {
    "dnsLabelPrefix": {
      "type": "string",
      "metadata": {
        "description": "Unique public DNS prefix for the deployment. The fqdn will look something like '<dnsname>.westus.cloudapp.azure.com'. Up to 62 chars, digits or dashes, lowercase, should start with a letter: must conform to '^[a-z][a-z0-9-]{1,61}[a-z0-9]$'. For example johndns1 will result the final RDWEB access url like https://johndns1.westus.cloudapp.azure.com/RDWeb"
      }
    },
    "adDomainName": {
      "type": "string",
      "metadata": {
        "description": "The name of the AD domain. For example contoso.com"
      },
      "defaultValue": "adm.scalesquad.io"
    },
    "adVnetName": {
      "type": "string",
      "metadata": {
        "description": "The vnet name of AD domain. For example johnvnet1"
      },
      "defaultValue": "AD-VNET"
    },
    "adVnetRG": {
      "type": "string",
      "metadata": {
        "description": "The Resource Group containing the existing Virtual Network resource"
      },
      "defaultValue": "AD-VNET-RG"
    },
    "adSubnetName": {
      "type": "string",
      "metadata": {
        "description": "The subnet name of AD domain. For example johnsubnet1"
      },
      "defaultValue": "AD-VNET-SUBNET"
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "The name of the administrator of the new VM and the domain. Exclusion list: 'administrator'. For example johnadmin"
      },
      "defaultValue": "nitadmin"
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The password for the administrator account of the new VM and the domain"
      },
      "defaultValue": ""
    },
    "imageSKU": {
      "type": "string",
      "allowedValues": [
        "2012-R2-Datacenter",
        "2016-Datacenter"
      ],
      "metadata": {
        "description": "Windows server SKU"
      },
      "defaultValue": "2016-Datacenter"
    },
    "numberOfRdshInstances": {
      "type": "int",
      "defaultValue": 2,
      "metadata": {
        "description": "Number of RemoteDesktopSessionHosts"
      }
    },
    "rdshVmSize": {
      "type": "string",
      "allowedValues": [
        "Standard_A2",
        "Standard_A2_v2",
        "Standard_A2m_v2",
        "Standard_A4_v2",
        "Standard_A4m_v2",
        "Standard_A8_v2",
        "Standard_A8m_v2",
        "Standard_D1_v2",
        "Standard_D2_v2",
        "Standard_D3_v2",
        "Standard_D4_v2",
        "Standard_D5_v2"
      ],
      "metadata": {
        "description": "The size of the RDSH VMs"
      },
      "defaultValue": "Standard_A2"
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "loadBalancer": {
      "type": "string",
      "metadata": {
        "description": "The Loadbalancer name must match from the RDS deployment. And default value taken by template is loadbalancer."
      },
      "defaultValue": "LbITRds01"
    },
    "backendAddressPools": {
      "type": "string",
      "defaultValue": "LBBAP",
      "metadata": {
        "description": "The backendAddressPools name must match from the RDS deployment. And default value taken by template is LBBAP."
      }
    },
    "publicIpRef": {
      "type": "string",
      "defaultValue": "[parameters('publicIpRef')]",
      "metadata": {
        "description": "The backendAddressPools name must match from the RDS deployment. And default value taken by template is LBBAP."
      }
    },
    "brokerIpRef": {
      "type": "string",
      "defaultValue": "[parameters('brokerIpRef')]",
      "metadata": {
        "description": "The backendAddressPools name must match from the RDS deployment. And default value taken by template is LBBAP."
      }
    },
    "gatewayIpRef": {
      "type": "string",
      "defaultValue": "[parameters('gatewayIpRef')]",
      "metadata": {
        "description": "The backendAddressPools name must match from the RDS deployment. And default value taken by template is LBBAP."
      }
    }
  },
  "variables": {
    "gwdnsLabelPrefix": "[toLower(concat('gw', 'rdshademo1'))]",
    "cbdnsLabelPrefix": "[toLower(concat('cb', 'rdshademo1'))]",
    "imagePublisher": "MicrosoftWindowsServer",
    "imageOffer": "WindowsServer",
    "dnsServerPrivateIp": "10.40.0.4",
    "subnet-id": "[concat(resourceId(parameters('adVnetRG'),'Microsoft.Network/virtualNetworks',parameters('adVnetName')),'/subnets/',parameters('adSubnetName'))]",
   //"publicIpRef": "[parameters('publicIpRef')]",
   //"brokerIpRef": "[parameters('brokerIpRef')]",
   //"gatewayIpRef": "[parameters('gatewayIpRef')]",
    "assetLocation": "https://raw.githubusercontent.com/Azure/azure-QuickStart-Templates/master/rds-deployment/"
  },
    "resources": [
      {
        "apiVersion": "2015-06-15",
        "type": "Microsoft.Network/publicIPAddresses",
        "name": "[parameters('publicIpRef')]",
        "location": "[parameters('location')]",
        "properties": {
          "publicIPAllocationMethod": "Dynamic",
          "dnsSettings": {
            "domainNameLabel": "[parameters('dnsLabelPrefix')]"
          }
        }
      },
      {
        "apiVersion": "2015-06-15",
        "type": "Microsoft.Network/publicIPAddresses",
        "name": "[parameters('gatewayIpRef')]",
        "location": "[parameters('location')]",
        "properties": {
          "publicIPAllocationMethod": "Dynamic",
          "dnsSettings": {
            "domainNameLabel": "[variables('gwdnsLabelPrefix')]"
          }
        }
      },
      {
        "apiVersion": "2015-06-15",
        "type": "Microsoft.Network/publicIPAddresses",
        "name": "[parameters('brokerIpRef')]",
        "location": "[parameters('location')]",
        "properties": {
          "publicIPAllocationMethod": "Dynamic",
          "dnsSettings": {
            "domainNameLabel": "[variables('cbdnsLabelPrefix')]"
          }
        }
      },
        {
            "apiVersion": "2017-03-30",
            "type": "Microsoft.Compute/availabilitySets",
            "location": "[parameters('location')]",
            "name": "AsTRdgwh01",
            "properties": {
                "PlatformUpdateDomainCount": 20,
                "PlatformFaultDomainCount": 2
            },
            "sku": {
                "name": "Aligned"
            }
        },
        {
            "apiVersion": "2017-03-30",
            "type": "Microsoft.Compute/availabilitySets",
            "location": "[parameters('location')]",
            "name": "AsTRdcbh01",
            "properties": {
                "PlatformUpdateDomainCount": 20,
                "PlatformFaultDomainCount": 2
            },
            "sku": {
                "name": "Aligned"
            }
        },
        {
            "apiVersion": "2017-03-30",
            "type": "Microsoft.Compute/availabilitySets",
            "location": "[parameters('location')]",
            "name": "AsTRdsh01",
            "properties": {
                "PlatformUpdateDomainCount": 20,
                "PlatformFaultDomainCount": 2
            },
            "sku": {
                "name": "Aligned"
            }
        },
      {
        "apiVersion": "2015-06-15",
        "type": "Microsoft.Network/loadBalancers",
        "name": "[parameters('loadBalancer')]",
        "location": "[parameters('location')]",
        "dependsOn": [
          "[concat('Microsoft.Network/publicIPAddresses/',parameters('publicIpRef'))]"
        ],
        "properties": {
          "frontendIPConfigurations": [
            {
              "name": "LBFE",
              "properties": {
                "publicIPAddress": {
                  "id": "[resourceId('Microsoft.Network/publicIPAddresses',parameters('publicIpRef'))]"
                }
              }
            }
          ],
          "backendAddressPools": [
            {
              "name": "LBBAP"
            }
          ],
          "loadBalancingRules": [
            {
              "name": "LBRule01",
              "properties": {
                "frontendIPConfiguration": {
                  "id": "[concat(resourceId('Microsoft.Network/loadBalancers',parameters('loadBalancer')),'/frontendIPConfigurations/LBFE')]"
                },
                "backendAddressPool": {
                  "id": "[concat(resourceId('Microsoft.Network/loadBalancers',parameters('loadBalancer')),'/backendAddressPools/LBBAP')]"
                },
                "protocol": "Tcp",
                "frontendPort": 443,
                "backendPort": 443,
                "enableFloatingIP": false,
                "idleTimeoutInMinutes": 5,
                "loadDistribution": "SourceIPProtocol",
                "probe": {
                  "id": "[concat(resourceId('Microsoft.Network/loadBalancers',parameters('loadBalancer')),'/probes/tcpProbe')]"
                }
              }
            },
            {
              "name": "LBRule02",
              "properties": {
                "frontendIPConfiguration": {
                  "id": "[concat(resourceId('Microsoft.Network/loadBalancers',parameters('loadBalancer')),'/frontendIPConfigurations/LBFE')]"
                },
                "backendAddressPool": {
                  "id": "[concat(resourceId('Microsoft.Network/loadBalancers',parameters('loadBalancer')),'/backendAddressPools/LBBAP')]"
                },
                "protocol": "Udp",
                "frontendPort": 3391,
                "backendPort": 3391,
                "enableFloatingIP": false,
                "idleTimeoutInMinutes": 5,
                "loadDistribution": "SourceIPProtocol",
                "probe": {
                  "id": "[concat(resourceId('Microsoft.Network/loadBalancers',parameters('loadBalancer')),'/probes/tcpProbe')]"
                }
              }
            }
          ],
          "probes": [
            {
              "name": "tcpProbe",
              "properties": {
                "protocol": "Tcp",
                "port": 443,
                "intervalInSeconds": 5,
                "numberOfProbes": 2
              }
            },
            {
              "name": "tcpProbe01",
              "properties": {
                "protocol": "Tcp",
                "port": 3391,
                "intervalInSeconds": 5,
                "numberOfProbes": 2
              }
            }
          ],
          "inboundNatRules": [
            {
              "name": "rdp",
              "properties": {
                "frontendIPConfiguration": {
                  "id": "[concat(resourceId('Microsoft.Network/loadBalancers',parameters('loadBalancer')),'/frontendIPConfigurations/LBFE')]"
                },
                "protocol": "tcp",
                "frontendPort": 3389,
                "backendPort": 3389,
                "enableFloatingIP": false
              }
            }
          ]
        }
      },
        {
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "NcVmWTRdgwh01",
            "location": "[parameters('location')]",
          "properties": {
            "ipConfigurations": [
              {
                "name": "ipconfig",
                "properties": {
                  "privateIPAllocationMethod": "Dynamic",
                  "publicIPAddress": {
                    "id": "[resourceId('Microsoft.Network/publicIPAddresses',parameters('gatewayIpRef'))]"
                  },
                  "subnet": {
                    "id": "[variables('subnet-id')]"
                  },
                  "loadBalancerBackendAddressPools": [
                    {
                      "id": "[concat(resourceId('Microsoft.Network/loadBalancers','LbITRds01'),'/backendAddressPools/LBBAP')]"
                    }
                  ],
                  "loadBalancerInboundNatRules": [
                    {
                      "id": "[concat(resourceId('Microsoft.Network/loadBalancers','LbITRds01'),'/inboundNatRules/rdp')]"
                    }
                  ]
                }
              }
            ],
            "dnsSettings": {
              "dnsServers": [
                "[variables('dnsServerPrivateIp')]"
              ]
            },
            "dependsOn": [
              "Microsoft.Network/loadBalancers/LbITRds01"
            ]
          }
        },
        {
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "NcVmWTRdcbh01",
            "location": "[parameters('location')]",
            "dependsOn": [
                "Microsoft.Network/loadBalancers/LbITRds01"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                          "publicIPAddress": {
                            "id": "[resourceId('Microsoft.Network/publicIPAddresses',parameters('brokerIpRef'))]"
                          },
                            "subnet": {
                                "id": "[variables('subnet-id')]"
                            }
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": [
                        "[variables('dnsServerPrivateIp')]"
                    ]
                }
            }
        },
      {
        "apiVersion": "2015-06-15",
        "type": "Microsoft.Network/networkInterfaces",
        "name": "[concat('NcVmWTRdsh', copyindex())]",
        "location": "[parameters('location')]",
        "copy": {
          "name": "rdsh-nic-loop",
          "count": "[parameters('numberOfRdshInstances')]"
        },
        "dependsOn": [
          "Microsoft.Network/loadBalancers/LbITRds01"
        ],
        "properties": {
          "ipConfigurations": [
            {
              "name": "ipconfig",
              "properties": {
                "privateIPAllocationMethod": "Dynamic",
                "subnet": {
                  "id": "[variables('subnet-id')]"
                }
              }
            }
          ],
          "dnsSettings": {
            "dnsServers": [
              "[variables('dnsServerPrivateIp')]"
            ]
          }
        }
      },
        {
            "apiVersion": "2017-03-30",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "VmWTRdgwh1",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/availabilitySets', 'AsTRdgwh01')]",
                "Microsoft.Network/networkInterfaces/NcVmWTRdgwh01"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Standard_A2"
                },
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets', 'AsTRdgwh01')]"
                },
              "osProfile": {
                "computerName": "VmWTRdgwh1",
                "adminUsername": "[parameters('adminUsername')]",
                "adminPassword": "[parameters('adminPassword')]"
              },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('imagePublisher')]",
                        "offer": "[variables('imageOffer')]",
                        "sku": "[parameters('imageSKU')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "MdOVmWTRdgwh01",
                        "caching": "ReadWrite",
                        "createOption": "FromImage",
                        "managedDisk": {
                            "storageAccountType": "Standard_LRS"
                        }
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces','NcVmWTRdgwh01')]"
                        }
                    ]
                }
            },
            "resources": [
              {
                "apiVersion": "2015-06-15",
                "type": "Microsoft.Compute/virtualMachines/extensions",
                "name": "VmWTRdgwh1/gateway",
                "location": "[parameters('location')]",
                "dependsOn": [
                  "[resourceId('Microsoft.Compute/virtualMachines', 'VmWTRdgwh1')]"
                ],
                "properties": {
                  "publisher": "Microsoft.Powershell",
                  "type": "DSC",
                  "typeHandlerVersion": "2.11",
                  "autoUpgradeMinorVersion": true,
                  "settings": {
                    "ModulesUrl": "[concat(variables('assetLocation'),'/Configuration.zip')]",
                    "ConfigurationFunction": "Configuration.ps1\\Gateway",
                    "Properties": {
                      "DomainName": "[parameters('adDomainName')]",
                      "AdminCreds": {
                        "UserName": "[parameters('adminUsername')]",
                        "Password": "PrivateSettingsRef:AdminPassword"
                      }
                    }
                  },
                  "protectedSettings": {
                    "Items": {
                      "AdminPassword": "[parameters('adminPassword')]"
                    }
                  }
                }
              }
            ]
        },
        {
            "apiVersion": "2017-03-30",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat('VmWTRdsh', copyindex())]",
            "location": "[parameters('location')]",
            "copy": {
                "name": "rdsh-vm-loop",
                "count": "[parameters('numberOfRdshInstances')]"
            },
          "dependsOn": [
            "[resourceId('Microsoft.Compute/availabilitySets', 'AsTRdsh01')]",
            "[concat('Microsoft.Network/networkInterfaces/', 'NcVmWTRdsh', copyindex())]"
          ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('rdshVmSize')]"
                },
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets', 'AsTRdsh01')]"
                },
                "osProfile": {
                    "computerName": "[concat('VmWTRdsh', copyIndex())]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('imagePublisher')]",
                        "offer": "[variables('imageOffer')]",
                        "sku": "[parameters('imageSKU')]",
                        "version": "latest"
                    },
                  "osDisk": {
                    "name": "[concat('MdOVmWTRdsh', copyIndex())]",
                    "caching": "ReadWrite",
                    "createOption": "FromImage",
                    "managedDisk": {
                      "storageAccountType": "Standard_LRS"
                    }
                  }
                },
                "networkProfile": {
                    "networkInterfaces": [
                      {
                        "id": "[resourceId('Microsoft.Network/networkInterfaces',concat('NcVmWTRdsh', copyindex()))]"
                      }
                    ]
                }
            },
            "resources": [
              {
                "apiVersion": "2015-06-15",
                "type": "Microsoft.Compute/virtualMachines/extensions",
                "name": "[concat('VmWTRdsh', copyindex(),'/sessionhost')]",
                "location": "[parameters('location')]",
                "dependsOn": [
                  "[resourceId('Microsoft.Compute/virtualMachines', concat('VmWTRdsh', copyindex()))]"
                ],
                "properties": {
                  "publisher": "Microsoft.Powershell",
                  "type": "DSC",
                  "typeHandlerVersion": "2.11",
                  "autoUpgradeMinorVersion": true,
                  "settings": {
                    "ModulesUrl": "[concat(variables('assetLocation'),'/Configuration.zip')]",
                    "ConfigurationFunction": "Configuration.ps1\\SessionHost",
                    "Properties": {
                      "DomainName": "[parameters('adDomainName')]",
                      "AdminCreds": {
                        "UserName": "[parameters('adminUsername')]",
                        "Password": "PrivateSettingsRef:AdminPassword"
                      }
                    }
                  },
                  "protectedSettings": {
                    "Items": {
                      "AdminPassword": "[parameters('adminPassword')]"
                    }
                  }
                }
              }
            ]
        },
        {
            "apiVersion": "2017-03-30",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "VmWTRdcbh01",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/availabilitySets', 'AsTRdcbh01')]",
                "Microsoft.Network/networkInterfaces/NcVmWTRdcbh01",
                "rdsh-vm-loop"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Standard_A2"
                },
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets', 'AsTRdcbh01')]"
                },
              "osProfile": {
                "computerName": "VmWTRdcbh01",
                "adminUsername": "[parameters('adminUsername')]",
                "adminPassword": "[parameters('adminPassword')]"
              },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('imagePublisher')]",
                        "offer": "[variables('imageOffer')]",
                        "sku": "[parameters('imageSKU')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "MdOVmWTRdcbh01",
                        "caching": "ReadWrite",
                      "createOption": "FromImage",
                        "managedDisk": {
                            "storageAccountType": "Standard_LRS"
                        }
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces','NcVmWTRdcbh01')]"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "VmWTRdcbh01/rdsdeployment",
            "apiVersion": "2015-06-15",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', 'VmWTRdcbh01')]",
                "Microsoft.Compute/virtualMachines/VmWTRdgwh1/extensions/gateway",
                "rdsh-vm-loop"
            ],
            "properties": {
                "publisher": "Microsoft.Powershell",
                "type": "DSC",
                "typeHandlerVersion": "2.11",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "modulesUrl": "[concat(variables('assetLocation'),'/Configuration.zip')]",
                    "configurationFunction": "Configuration.ps1\\RDSDeployment",
                  "Properties": {
                    "adminCreds": {
                      "UserName": "[parameters('adminUsername')]",
                      "Password": "PrivateSettingsRef:adminPassword"
                    },
                    "connectionBroker": "[concat('VmWTRdcbh01.',parameters('adDomainName'))]",
                    "domainName": "[parameters('adDomainName')]",
                    "externalfqdn": "[reference(parameters('gatewayIpRef')).dnsSettings.fqdn]",
                    "numberOfRdshInstances": "[parameters('numberOfRdshInstances')]",
                    "sessionHostNamingPrefix": "VmWTRdsh",
                    "webAccessServer": "[concat('VmWPRdgwh.',parameters('adDomainName'))]"
                  }
                },
                "protectedSettings": {
                    "Items": {
                        "adminPassword": "[parameters('adminPassword')]"
                    }
                }
            }
        }
    ]
}
